syntax = "proto3";

package org.aware.model;

option java_multiple_files = true;
option java_package = "org.aware.model";
option java_outer_classname = "Model";

// Represents an arbitrary http(s) payload of requests / responses.
message HttpPayload{
  map<string, string> header_map = 1;
  map<string, string> query_param_map = 13;
  // Only applicable for request payloads.
  optional string http_method = 3;
  // Only applicable for response payloads.
  optional int32 response_code = 12;
  oneof body{
    string json_body = 2;
    // Populate query param map instead. This is since query params are not limited to GET methods.
    HttpGetBody http_get_body = 4 [deprecated = true];
    string text_body = 5;
    string html_body = 6;
    string xml_body = 7;
    HttpFormDataBody http_form_data_body = 8;
    HttpFormUrlencodedBody http_form_urlencoded_body = 11;
    BinaryDataBody binary_data_body = 9;
  }
}

message HttpGetBody{
  map<string, string> key_value_map = 1;
}

message HttpFormDataBody{
  map<string, string> key_value_map = 1;
}

message HttpFormUrlencodedBody{
  map<string, string> key_value_map = 1;
}

message BinaryDataBody{
  optional bytes data = 1;
}

// Represents an arbitrary payload of requests / responses.
message Payload{
  // Span ID corresponding to the payload. This is used for correlating requests with corresponding responses.
  optional string span_id = 1;
  oneof payload{
    HttpPayload http_payload = 2;
  }
}

message PayloadList{
  repeated Payload payloads = 1;
}

message InsertClientRecordedPayloadRequest{
  optional Payload request_payload = 1;
  optional Payload response_payload = 2;
  optional string url = 3;
  optional string session_recording_tracking_id = 4;
  optional string current_user_id = 5;
}